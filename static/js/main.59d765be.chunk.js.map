{"version":3,"sources":["upload.js","App.js","reportWebVitals.js","index.js"],"names":["config","bucketName","dirName","region","accessKeyId","secretAccessKey","UploadS3","e","console","log","target","files","ReactS3","uploadFile","then","data","catch","err","alert","react_default","a","createElement","type","onChange","this","upload","Component","App","Fragment","src_upload","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"6PAIMA,EAAS,CACbC,WAAY,WACZC,QAAS,cACTC,OAAQ,aACRC,YAAa,uBACbC,gBAAiB,4CA2BJC,iLAtBJC,GACLC,QAAQC,IAAIF,EAAEG,OAAOC,MAAM,IAC3BC,IAAQC,WAAWN,EAAEG,OAAOC,MAAM,GAAGX,GAAQc,KAAK,SAACC,GACnDP,QAAQC,IAAI,aAEXO,MAAM,SAACC,GACNC,MAAMD,sCAIV,OACAE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,6BAGAF,EAAAC,EAAAC,cAAA,SAAOC,KAAK,OACdC,SAAUC,KAAKC,iBAjBIC,aCFRC,MARf,WACE,OACAR,EAAAC,EAAAC,cAACF,EAAAC,EAAMQ,SAAP,KACET,EAAAC,EAAAC,cAAEQ,EAAF,QCMWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAA1B,EAAA,GAAAO,KAAAmB,EAAAC,KAAA,UAAqBpB,KAAK,SAAAqB,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDdU,IAASC,OACPvB,EAAAC,EAAAC,cAACF,EAAAC,EAAMuB,WAAP,KACExB,EAAAC,EAAAC,cAAEuB,EAAF,OAEFC,SAASC,eAAe,SAM1BhB","file":"static/js/main.59d765be.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactS3 from 'react-s3';\r\n\r\n\r\nconst config = {\r\n  bucketName: 'lifeeasy',\r\n  dirName: 'ingest/csv/',\r\n  region: 'ap-south-1',\r\n  accessKeyId: 'AKIAQEEAGBCBODYSBEVX',\r\n  secretAccessKey: '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',\r\n}\r\n\r\n\r\nclass UploadS3 extends Component {\r\n    upload(e){\r\n      console.log(e.target.files[0]);\r\n      ReactS3.uploadFile(e.target.files[0],config).then((data)=>{\r\n      console.log(\"success\");\r\n      })\r\n      .catch((err) => {\r\n        alert(err);\r\n      })\r\n    }\r\n  render() {\r\n    return (\r\n    <div>\r\n      <h3>\r\n        Upload CSV File\r\n      </h3>\r\n      <input type=\"file\"\r\n    onChange={this.upload}/>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UploadS3;\r\n","import './App.css';\nimport React from 'react';\nimport UploadS3 from './upload';\nfunction App() {\n  return (\n  <React.Fragment>\n    < UploadS3/>\n  </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    < App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}