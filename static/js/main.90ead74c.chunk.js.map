{"version":3,"sources":["upload.js","userservice.js","Navbar.js","Tab.js","App.js","reportWebVitals.js","index.js"],"names":["config","fileName","axios","post","get","bucketName","dirName","region","accessKeyId","secretAccessKey","UploadS3","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","downloadxls","csvname","loading","upload","bind","assertThisInitialized","e","_this2","console","log","target","files","ReactS3","uploadFile","then","data","filename","name","setState","filenamestr","String","replace","result","document","getElementById","disabled","href","catch","err","alert","visibility","style","_this$state","react_default","a","createElement","id","className","color","type","accept","onChange","xmlns","width","height","fill","class","viewBox","d","Component","NavBar","Fragment","TabPanel","children","value","index","other","objectWithoutProperties","assign","role","hidden","concat","aria-labelledby","Box","p","Typography","a11yProps","aria-controls","useStyles","makeStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","SimpleTabs","_React$useState","React","useState","_React$useState2","slicedToArray","setValue","AppBar","position","Tabs","event","newValue","aria-label","Tab","label","src_upload_0","App","Navbar","reportWebVitals","onPerfEntry","Function","__webpack_require__","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.90ead74c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactS3 from \"react-s3\";\r\nimport UserService from \"./userservice\";\r\nimport \"./upload.css\";\r\nimport axios from \"axios\";\r\n\r\nconst config = {\r\n  bucketName: \"lifeeasy\",\r\n  dirName: \"ingest/csv\",\r\n  region: \"ap-south-1\",\r\n  accessKeyId: \"AKIAQEEAGBCBE7RAPCSJ\",\r\n  secretAccessKey: \"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\",\r\n};\r\n\r\nclass UploadS3 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      downloadxls: \"http://localhost:8080/api/lifeeasy/downloadxls/\",\r\n      csvname: \"something\",\r\n      loading: false,\r\n    };\r\n    this.upload = this.upload.bind(this);\r\n  }\r\n  upload(e) {\r\n    console.log(e.target.files[0]);\r\n    ReactS3.uploadFile(e.target.files[0], config)\r\n      .then((data) => {\r\n        var filename = e.target.files[0].name;\r\n        this.setState({ csvname: filename });\r\n        var filenamestr = String(filename);\r\n        filenamestr = filenamestr.replace(\"csv\", \"xls\");\r\n        console.log(\"success\");\r\n        console.log(filenamestr);\r\n        this.setState({\r\n          downloadxls:\r\n            \"http://localhost:8080/api/lifeeasy/downloadxls/\" + filenamestr,\r\n        });\r\n        var CONVERT_CSV_URL = \"http://localhost:8080/api/lifeeasy/convert/csv/\";\r\n\r\n        this.setState({ loading: true }, () => {\r\n          axios.post(CONVERT_CSV_URL + this.state.csvname).then((result) =>\r\n            this.setState({\r\n              loading: false,\r\n            })\r\n          );\r\n        });\r\n        document.getElementById(\"downloadxls\").disabled = false;\r\n\r\n        document.getElementById(\"a\").href = this.state.downloadxls;\r\n        document.getElementById(\"a\").disabled = false;\r\n        document.getElementById(\"b\").disabled = false;\r\n      })\r\n      .catch((err) => {\r\n        alert(err);\r\n      });\r\n  }\r\n  myFunction() {\r\n    var x = (document.getElementById(\"downloadxls\").visibility = \"visible\");\r\n    x.style.visibility = \"visible\";\r\n    console.log(\"Touched\");\r\n  }\r\n  render() {\r\n    const { data, loading } = this.state;\r\n    return (\r\n      <div id=\"uploadDiv\" className=\"center animatedDiv\">\r\n        <h3 style={{ color: \"white\" }}>Upload CSV File</h3>\r\n        <label className=\"btn btn-default\">\r\n          <input\r\n            type=\"file\"\r\n            accept=\".csv\"\r\n            className=\"file\"\r\n            onChange={this.upload}\r\n          />\r\n        </label>\r\n\r\n        <div id=\"downloadxls\">\r\n          <a id=\"a\" href=\"/\" disabled>\r\n            {\" \"}\r\n            <button id=\"b\" className=\"btn btn-success\" disabled>\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                fill=\"currentColor\"\r\n                class=\"bi bi-download\"\r\n                viewBox=\"0 0 16 16\"\r\n              >\r\n                <path d=\"M.5 9.9a.5.5 0 0 1 .5.5v2.5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2.5a.5.5 0 0 1 1 0v2.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2v-2.5a.5.5 0 0 1 .5-.5z\"></path>\r\n                <path d=\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\"></path>\r\n              </svg>\r\n              Downlaod XLS\r\n            </button>{\" \"}\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UploadS3;\r\n","import axios from 'axios';\r\n\r\nconst CONVERT_CSV_URL = \"http://localhost:8080/api/lifeeasy/convert/csv/\";\r\nconst DOWNLOAD_XLS = \"http://localhost:8080/api/lifeeasy/downloadxls/addresses.xls\";\r\n\r\nclass UserService{\r\n\r\n    convercsv(fileName){\r\n         axios.post(CONVERT_CSV_URL+fileName);\r\n    }\r\n    downloadxls(){\r\n        \r\n        axios.get(DOWNLOAD_XLS);\r\n\r\n    }\r\n}\r\n\r\nexport default new UserService()","import React, { Component } from 'react';\r\n\r\nclass NavBar extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n<React.Fragment>\r\n<nav class=\"navbar navbar-dark bg-dark\">\r\n<a class=\"navbar-brand\" href=\"#\">LifeEasy</a>\r\n</nav>\r\n</React.Fragment>\r\n\r\n         );\r\n    }\r\n}\r\n \r\nexport default NavBar;","import React, { Component } from \"react\";\r\nimport UploadS3 from \"./upload\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function SimpleTabs() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar position=\"static\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"simple tabs example\"\r\n        >\r\n          <Tab label=\"Csv To Xls\" {...a11yProps(0)} />\r\n          <Tab label=\"Xls To Pdf\" {...a11yProps(1)} />\r\n          <Tab label=\"Item Three\" {...a11yProps(2)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <UploadS3 />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        Xls To Pdf\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        Item Three\r\n      </TabPanel>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import \"./App.css\";\r\nimport React from \"react\";\r\nimport UploadS3 from \"./upload\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport NavBar from \"./Navbar\";\r\nimport SimpleTabs from \"./Tab\";\r\nfunction App() {\r\n  return (\r\n    <React.Fragment>\r\n      <NavBar />\r\n      <SimpleTabs />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    < App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}